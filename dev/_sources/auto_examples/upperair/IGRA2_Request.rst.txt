
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/upperair/IGRA2_Request.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_upperair_IGRA2_Request.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_upperair_IGRA2_Request.py:


IGRA2 Upper Air Data Request
==============================

This example shows how to use siphon's `simplewebswervice` support to create a
query to the Integrated Global Radiosonde Archive version 2.

.. GENERATED FROM PYTHON SOURCE LINES 11-16

.. code-block:: default


    from datetime import datetime

    from siphon.simplewebservice.igra2 import IGRAUpperAir


.. GENERATED FROM PYTHON SOURCE LINES 17-18

Create a datetime object for the sounding and string of the station identifier.

.. GENERATED FROM PYTHON SOURCE LINES 18-21

.. code-block:: default

    date = datetime(2014, 9, 10, 0)
    station = 'USM00070026'


.. GENERATED FROM PYTHON SOURCE LINES 22-24

Make the request. IGRAUpperAir returns a dataframe containing the sounding data and
a dataframe with station metadata from the sounding header.

.. GENERATED FROM PYTHON SOURCE LINES 24-26

.. code-block:: default

    df, header = IGRAUpperAir.request_data(date, station)


.. GENERATED FROM PYTHON SOURCE LINES 27-28

Inspect data columns in the dataframe.

.. GENERATED FROM PYTHON SOURCE LINES 28-33

.. code-block:: default

    print(df.columns)

    # Inspect metadata from the data headers
    print(header.columns)


.. GENERATED FROM PYTHON SOURCE LINES 34-35

Pull out a specific column of data.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    print(df['pressure'])
    print(header['latitude'])


.. GENERATED FROM PYTHON SOURCE LINES 39-41

Units are stored in a dictionary with the variable name as the key in the `units`
attribute of the dataframe.

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: default

    print(df.units)
    print(header.units)


.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default

    print(df.units['pressure'])


.. GENERATED FROM PYTHON SOURCE LINES 48-49

Multiple records can be extracted simultaneously:

.. GENERATED FROM PYTHON SOURCE LINES 49-56

.. code-block:: default

    date = [datetime(2014, 9, 10, 0), datetime(2015, 9, 10, 12)]
    station = 'USM00070026'
    df, header = IGRAUpperAir.request_data(date, station)

    print(df.head())
    print(header.head())


.. GENERATED FROM PYTHON SOURCE LINES 57-59

IGRA2-Derived data can be accessed using the keyword derived=True.
This data has much more information in the headers.

.. GENERATED FROM PYTHON SOURCE LINES 59-61

.. code-block:: default

    df, header = IGRAUpperAir.request_data(date, station, derived=True)


.. GENERATED FROM PYTHON SOURCE LINES 62-63

Inspect data columns in the dataframe.

.. GENERATED FROM PYTHON SOURCE LINES 63-65

.. code-block:: default

    print(df.columns)
    print(header.columns)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_upperair_IGRA2_Request.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: IGRA2_Request.py <IGRA2_Request.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: IGRA2_Request.ipynb <IGRA2_Request.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
